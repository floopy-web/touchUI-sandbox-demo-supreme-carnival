<template>
  <ui-page>
      <ui-view class="sliderContent" ui:if="{{isShow}}">
        <ui-slider width="260"></ui-slider>      
      </ui-view>
      <ui-view class="buttonContent">
        <ui-button type="primary" bindtap="sliderShow">slider 创建滑动条控件</ui-button>
        <ui-button type="primary" bindtap="navToPage('/pages/detail')">{{ buttonText }}</ui-button>
        <ui-button type="primary" bindtap="navToPage('/pages/new-page')"> go to new Test Page </ui-button>

      </ui-view>
  </ui-page>
</template>

<script>
export default {
  config: {
    navigationBarTitleText: "首页",
    backgroundColor: "#F4F4F4",
    navigationBarTextStyle: "black"
  },
  data() {
    return {
      buttonText: "ButtontextNav 界面跳转",
      isShow: false
    };
  },
  methods: {
    sliderShow() {
      this.isShow = true;
    },
    navToPage(page, params) {
      console.log("index::navToPage::", page, params);
      ui.navigateTo({
        url: page
      });
    }
  },
  mounted() {
    //首屏页面需要在mounted中延时才能调用框架api，其他页面不需要延时
    setTimeout(() => {
      //关闭app启动图
      ui.closeSplashscreen();
    }, 1000);
  }
};
</script>

<style lang="less">
.content {
  .mix-flex-center();
}
.sliderContent {
  padding: 50px 50px 0px 50px;
}
.buttonContent {
  padding: 50px;
}
</style>
